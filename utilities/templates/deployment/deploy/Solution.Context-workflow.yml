name: Solution.Context Workflow

on: 
  workflow_dispatch:
  push:
    branches: 
      - main
    paths:
      - microservices/Solution.Context/**

permissions:
  id-token: write
  contents: read
  
jobs:
  setup:
    runs-on: ubuntu-22.04
    outputs:
      solutionName: [nf:solution-name]
      serviceName: [nf:service-name]
      serviceRoot: ./microservices/Solution.Context
      serviceVer: "1.0.${{github.run_number}}"
      aksResourceGroup: kube-cluster
      aksName: [nf:aks-name]
      imageRegistry: [nf:registry]
      chartName: microservice
      chartVersion: 1.0.9
    steps:
      - run: echo "Common Workfow Variables"
      
  test:
    needs: [ setup ]
    uses: ./.github/workflows/shared-test-workflow.yml
    with:
      environment: dev
      test-root-path: ${{ needs.setup.outputs.serviceRoot }}/src
    secrets:
      package-access-token: ${{ secrets.NUGET_PACKAGE_TOKEN }}

  build:
    needs: [setup, test]
    uses: ./.github/workflows/shared-build-workflow.yml
    with:
      environment:       dev
      solution-name:     ${{ needs.setup.outputs.solutionName }}
      service-name:      ${{ needs.setup.outputs.serviceName }}
      docker-file-path:  ${{ needs.setup.outputs.serviceRoot }}
      image-version:     ${{ needs.setup.outputs.serviceVer }}
      image-registry:    ${{ needs.setup.outputs.imageRegistry }}
    secrets: inherit

  deploy-dev:
    needs: [setup, build]
    uses: ./.github/workflows/shared-deploy-workflow.yml
    with:
      environment:        dev
      solution-name:      ${{ needs.setup.outputs.solutionName }}
      service-name:       ${{ needs.setup.outputs.serviceName }}
      image-version:      ${{ needs.setup.outputs.serviceVer }}
      aks-resource-group: ${{ needs.setup.outputs.aksResourceGroup }}
      aks-name:           ${{ needs.setup.outputs.aksName }}
      chart-registry:     ${{ needs.setup.outputs.imageRegistry }}
      chart-name:         ${{ needs.setup.outputs.chartName }}
      chart-version:      ${{ needs.setup.outputs.chartVersion }}
    secrets: inherit

  deploy-qa:
    needs: [setup, deploy-dev]
    uses: ./.github/workflows/shared-deploy-workflow.yml
    with:
      environment:        qa
      solution-name:      ${{ needs.setup.outputs.solutionName }}
      service-name:       ${{ needs.setup.outputs.serviceName }}
      image-version:      ${{ needs.setup.outputs.serviceVer }}
      aks-resource-group: ${{ needs.setup.outputs.aksResourceGroup }}
      aks-name:           ${{ needs.setup.outputs.aksName }}
      chart-registry:     ${{ needs.setup.outputs.imageRegistry }}
      chart-name:         ${{ needs.setup.outputs.chartName }}
      chart-version:      ${{ needs.setup.outputs.chartVersion }}
    secrets: inherit

  deploy-prod:
    needs: [setup, deploy-qa]
    uses: ./.github/workflows/shared-deploy-workflow.yml
    with:
      environment:        prod
      solution-name:      ${{ needs.setup.outputs.solutionName }}
      service-name:       ${{ needs.setup.outputs.serviceName }}
      image-version:      ${{ needs.setup.outputs.serviceVer }}
      aks-resource-group: ${{ needs.setup.outputs.aksResourceGroup }}
      aks-name:           ${{ needs.setup.outputs.aksName }}
      chart-registry:     ${{ needs.setup.outputs.imageRegistry }}
      chart-name:         ${{ needs.setup.outputs.chartName }}
      chart-version:      ${{ needs.setup.outputs.chartVersion }}
    secrets: inherit