{
  "$schema": "http://json.schemastore.org/template",
  "author": "NetFusion-Contrib",
  "classifications": [ "WebApi", "Microservice" ], 
  "identity": "NetFusion.Microservice",  
  "name": "NetFusion Microservice",
  "shortName": "netfusion-microservice",
  "tags": {
    "language": "C#",
    "type":"project"
  },
  "sourceName": "Solution.Context", 
  "preferNameDirectory": true,
  "symbols":{
    "local-cluster-name": {
      "type": "parameter",
      "datatype": "text",
      "replaces": "[nf:local-cluster-name]",
      "description": "The name of locally created cluster."
    },
    "local-registry-port": {
      "type": "parameter",
      "datatype": "int",
      "replaces": "[nf:local-registry-port]",
      "description": "The port of the local image registry to which the image is pushed."
    },
    "kube-namespace": {
      "type": "parameter",
      "datatype": "text",
      "replaces": "[nf:kube-namespace]",
      "description": "The Kubernetes namespace to which the microservice is to be deployed."
    },
    "kube-registry": {
      "type": "parameter",
      "datatype": "text",
      "replaces": "[nf:kube-registry]",
      "description": "The Kubernetes registry from which images are pulled."
    },
    "kube-replicas": {
      "type": "parameter",
      "datatype": "int",
      "replaces": "[nf:kube-replicas]",
      "description": "The number of replicas of the Microservice to be deployed."
    },
    "container-port": {
      "type": "parameter",
      "datatype":"int",
      "replaces": "[nf:container-port]",
      "description": "The port used when running within a container or locally within a process or IDE."
    },
    "sourceName": {
      "type": "generated",
      "generator": "casing",
      "parameters": {
        "source": "name",
        "toLower": true
      }
    },
    "microservice-name": {
      "type": "generated",
      "generator": "regex",
      "dataType": "string",
      "replaces": "[nf:microservice-name]", 
      "parameters": {
        "source": "sourceName",
        "steps": [
          {
            "regex": "\\.",            
            "replacement": "-"   
          }
        ]
      }
    },
    "app-id": {
      "type": "generated",
      "generator": "guid",
      "replaces": "[nf:app-id]",
      "description": "The generated GUID used to identify the Application Service Plugin Component.",
      "parameters": {
        "defaultFormat": "D"
      }
    },
    "domain-id": {
      "type": "generated",
      "generator": "guid",
      "replaces": "[nf:domain-id]",
      "description": "The generated GUID used to identify the Domain Plugin Component.",
      "parameters": {
        "defaultFormat": "D"
      }
    },
    "infra-id": {
      "type": "generated",
      "generator": "guid",
      "replaces": "[nf:infra-id]",
      "description": "The generated GUID used to identify the Infrastructure Plugin Component.",
      "parameters": {
        "defaultFormat": "D"
      }
    },
    "host-id": {
      "type": "generated",
      "generator": "guid",
      "replaces": "[nf:host-id]",
      "description": "The generated GUID used to identify the Host Plugin Component.",
      "parameters": {
        "defaultFormat": "D"
      }
    }
  },
  "sources":[
    { "include": "src/Solution.Context.sln" },
    { "include": "src/Components/Solution.Context.Domain/**/*" },
    { "include": "src/Components/Solution.Context.App/**/*" },
    { "include": "src/Components/Solution.Context.Infra/**/*" },
    { "include": "src/Solution.Context.WebApi/**/*" },
    { "include": "src/Solution.Context.Tests/**/*" }
  ]
}
